import streamlit as st

TITLE = "RFM - Aksiyon ZamanÄ±"
st.set_page_config(
    page_title=TITLE,
    page_icon="ğŸ“ˆ"
)

st.title(TITLE)

st.markdown("## AdÄ±m 1:")
st.markdown("- Segmentlerin recency, frequnecy ve monetary ortalamalarÄ±nÄ± inceleyiniz.")

show_tip = False  # Initially hide the tip code
show_answer = False  # Initially hide the answer code
col1, col2 = st.columns(2)
with col1:
    if st.button("Ä°pucu ğŸ’¡", key="ta1"):
        show_tip = not show_tip  # Toggle the value of show_answer
with col2:
    if st.button("Cevap ğŸ”‘", key="sa1"):
        show_answer = not show_answer  # Toggle the value of show_answer

if show_tip:
    st.code("""
.groupby("...")[...].mean()
        """
            , language="python")
if show_answer:
    st.code("""
rfm.groupby("segment")["recency", "frequency", "monetary"].mean()
"""
            , language="python")

st.markdown("## AdÄ±m 2:")
st.markdown("- RFM analizi yardÄ±mÄ±yla aÅŸaÄŸÄ±da verilen 2 case iÃ§in ilgili profildeki mÃ¼ÅŸterileri "
            "bulun ve mÃ¼ÅŸteri id'lerini csv olarak kaydediniz")
st.markdown("-    - a. FLO bÃ¼nyesine yeni bir kadÄ±n ayakkabÄ± markasÄ± dahil ediyor."
            "Dahil ettiÄŸi markanÄ±n Ã¼rÃ¼n fiyatlarÄ± genel mÃ¼ÅŸteri tercihlerinin Ã¼stÃ¼nde."
            "Bu nedenle markanÄ±n tanÄ±tÄ±mÄ± ve Ã¼rÃ¼n satÄ±ÅŸlarÄ± iÃ§in ilgilenecek profildeki mÃ¼ÅŸterilerle "
            "Ã¶zel olarak iletiÅŸime geÃ§mek isteniliyor. SadÄ±k mÃ¼ÅŸterilerinden(champions,loyal_customers)"
            " ve kadÄ±n kategorisinden alÄ±ÅŸveriÅŸ yapan kiÅŸiler Ã¶zel olarak iletiÅŸim kurulacak mÃ¼ÅŸteriler."
            "Bu mÃ¼ÅŸterilerin id numaralarÄ±nÄ± csv dosyasÄ±na kaydediniz")
show_tip = False  # Initially hide the tip code
show_answer = False  # Initially hide the answer code
col1, col2 = st.columns(2)
with col1:
    if st.button("Ä°pucu ğŸ’¡", key="ta2"):
        show_tip = not show_tip  # Toggle the value of show_answer
with col2:
    if st.button("Cevap ğŸ”‘", key="sa2"):
        show_answer = not show_answer  # Toggle the value of show_answer

if show_tip:
    st.code("""
# .isin() methodu ile segmenti
# loyal_customers ve champions olan mÃ¼ÅŸterileri bulalÄ±m
# SonrasÄ±nda ise bu mÃ¼ÅŸterilerden interested_in_categories_12
# deÄŸiÅŸkeni KADIN olanlarÄ± bulalÄ±m
# ğŸ”‘ .str.contains("KADIN")
"""
            , language="python")
if show_answer:
    st.code("""
loyal_customers_champions = rfm[rfm["segment"].isin(["loyal_customers", "champions"])]["customer_id"]
new_brand_target_customer_id = (
    df  # From our first df
    .loc[df["master_id"].isin(loyal_customers_champions) &  # Find loyal customers(loyal customers and champions) AND
        df["interested_in_categories_12"].str.contains("KADIN")]  # Find
    ["master_id"]
)
new_brand_target_customer_id.name = "customer_id"  # Change name attribute from master_id to customer_id
new_brand_target_customer_id.to_csv("datasets/new_brand_target_customer_id.csv")  # save to csv

"""
            , language="python")

st.markdown(
    "-    - b. Erkek ve Ã‡ocuk Ã¼rÃ¼nlerinde %40'a yakÄ±n indirim planlanmaktadÄ±r. Bu indirimle ilgili "
    "kategorilerle ilgilenen geÃ§miÅŸte iyi mÃ¼ÅŸteri olan ama uzun sÃ¼redir alÄ±ÅŸveriÅŸ yapmayan"
    " kaybedilmemesi gereken mÃ¼ÅŸteriler, uykuda olanlar ve yeni gelen mÃ¼ÅŸteriler Ã¶zel olarak hedef"
    " alÄ±nmak isteniyor. Uygun profildeki mÃ¼ÅŸterilerin id'lerini csv dosyasÄ±na kaydediniz.")
show_tip = False  # Initially hide the tip code
show_answer = False  # Initially hide the answer code
col1, col2 = st.columns(2)
with col1:
    if st.button("Ä°pucu ğŸ’¡", key="ta3"):
        show_tip = not show_tip  # Toggle the value of show_answer
with col2:
    if st.button("Cevap ğŸ”‘", key="sa3"):
        show_answer = not show_answer  # Toggle the value of show_answer

if show_tip:
    st.code("""
# a ÅŸÄ±kkÄ±ndaki gibi .isin() methodunu kullanabiliriz
# .str.contains("ERKEK|COCUK") | (pipe) = veya
"""
            , language="python")
if show_answer:
    st.code("""
target_customers = rfm[rfm["segment"].isin(["cant_loose", "hibernating", "new_customers"])]["customer_id"]
discount_target_customer_ids = (
    df
    .loc[df["master_id"].isin(target_customers) &
        df["interested_in_categories_12"].str.contains("ERKEK|COCUK")
        ]
)
discount_target_customer_ids.name = "customer_id"
discount_target_customer_ids.to_csv("datasets/discount_target_customer_ids.csv")
"""
            , language="python")
